[
{
	"uri": "http://example.org/additional_lints/",
	"title": "additional_lints",
	"tags": [],
	"description": "",
	"content": "Additional Lints  Discover what Schemacrawler Additional Lints are all about and the core-concepts behind it.\n"
},
{
	"uri": "http://example.org/additional_lints/allabout/allabout/",
	"title": "About Additional Lints",
	"tags": [],
	"description": "",
	"content": "This project is a set of free basic database lints that come in addition to the ones embedded in Schemacrawler Lint.\nAdditional lint checks are :\nLinter : io.github.mbarre.schemacrawler.tools.LinterBlobTypeColumn\nChecks that no binary column type is used.\nDefault severity : critical.\nLinter : io.github.mbarre.schemacrawler.tools.LinterBooleanContent\nChecks if column type should be boolean. ex.: int column with only 1 and 0 values.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterByteaTypeColumn\nChecks that no binary column type is used. Postgres recommandation is to use OID.\nDefault severity : medium.\nLinter : io.github.mbarre.schemacrawler.tools.LinterColomnContentNotNormalized\nChecks wether foreign table should have been used. This linter is configurable thanks config file and following parameters:\n \u0026lt;linter id=\u0026quot;io.github.mbarre.schemacrawler.tool.linter.LinterColumnContentNotNormalized\u0026quot;\u0026gt; \u0026lt;run\u0026gt;true\u0026lt;/run\u0026gt; \u0026lt;config\u0026gt; \u0026lt;property name=\u0026quot;nbRepeatTolerance\u0026quot;\u0026gt;2\u0026lt;/property\u0026gt; \u0026lt;property name=\u0026quot;minTextColumnSize\u0026quot;\u0026gt;2\u0026lt;/property\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/linter\u0026gt;  nbRepeatTolerance : Repeat tolerance, 1 is the most agressive, duplicates occur since there are at least two reps of the same value. Default value is set to 2. minTextColumnSize : The minimal length of the text based column. We consider that a 1-length char based column is acceptable. Default value is set to 2.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterColumnSize\nChecks that string like type column size is appropriated. This linter is configurable thanks config file and following parameter:\n\u0026lt;linter id=\u0026quot;io.github.mbarre.schemacrawler.tool.linter.LinterColumnSize\u0026quot;\u0026gt; \u0026lt;run\u0026gt;true\u0026lt;/run\u0026gt; \u0026lt;config\u0026gt; \u0026lt;property name=\u0026quot;minColumnSizePercent\u0026quot;\u0026gt;20\u0026lt;/property\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/linter\u0026gt;  Default value is minColumnSizePercent = 20.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterCompressBlob\nIf column is BLOB or BINARY type, checks if compression can be useful: This linter is configurable thanks config file and following parameter:\n \u0026lt;linter id=\u0026quot;io.github.mbarre.schemacrawler.tool.linter.LinterCompressBlob\u0026quot;\u0026gt; \u0026lt;run\u0026gt;true\u0026lt;/run\u0026gt; \u0026lt;config\u0026gt; \u0026lt;property name=\u0026quot;minCompressionPercent\u0026quot;\u0026gt;30\u0026lt;/property\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/linter\u0026gt; Default value is minCompressionPercent = 20, means if compressed file is more than 20% smaller than original one, you shoud compress it. Default severity : high.  Linter : io.github.mbarre.schemacrawler.tools.LinterForeignKeyMismatchLazy\nCheck that a foreign key has the same type as the referenced primary key.\nDefault severity : critical.\nLinter : io.github.mbarre.schemacrawler.tools.LinterForeignKeyName\nIf you need your foreign key name has a specific prefix or suffix, this linter can check it. Default severity : medium. Exemple : if you want your foreign key starts with \u0026lsquo;id_\u0026rsquo;\n\u0026lt;linter id=\u0026quot;io.github.mbarre.schemacrawler.tool.linter.LinterForeignKeyName\u0026quot;\u0026gt; \u0026lt;run\u0026gt;true\u0026lt;/run\u0026gt; \u0026lt;severity\u0026gt;medium\u0026lt;/severity\u0026gt; \u0026lt;config\u0026gt; \u0026lt;property name=\u0026quot;foreignKeyPrefix\u0026quot;\u0026gt;id_\u0026lt;/property\u0026gt; \u0026lt;/config\u0026gt; \u0026lt;/linter\u0026gt; Linter : io.github.mbarre.schemacrawler.tools.LinterJsonContent\nChecks if column type should be JSON according to its content.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterJsonTypeColumn\nChecks that JSONB type is used for JSON content. (PostgresSQL)\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterPrimarykeyNotIntegerLikeType\nChecks that primary is integer like type.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterTableNameNotInLowerCase\nChecks that all tables and columns names are in lower case.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterXmlContent\nCheck that columns with XML content is XML type.\nDefault severity : high.\nLinter : io.github.mbarre.schemacrawler.tools.LinterTimeStampWithoutTimeZoneColumn\nCheck if columns have any TimeStamp data type columns if so suggest to use TimeStamp with TimeZones - PostgreSQL reserved. Default severity : critical.\n"
},
{
	"uri": "http://example.org/schemacrawler/",
	"title": "schemacrawler",
	"tags": [],
	"description": "",
	"content": "Schemacrawler  https://www.schemacrawler.com/\n"
},
{
	"uri": "http://example.org/additional_lints/docker/docker/",
	"title": "docker",
	"tags": [],
	"description": "",
	"content": "Schemacrawler Additional Lints is now released with an image on Docker Hub. This is an extension of the SchemaCrawler Docker Image.\nYou can run docker container like this :\ndocker run --name schemacrawler-additional-lints --rm -i -t --entrypoint=/bin/bash --net=host mbarre/schemacrawler-additional-lints  \u0026ndash;net=host option will allow you to work on database deployed on your host.\nUse the Schemacrawler Interactive Shell\nschemacrawler --shell  Use the following script from within the shell to launch the lints analysis :\nconnect --server=your_db_server --database=your_db --user=your_user load --info-level=minimum execute --command lint  Or, simplier\u0026hellip;\nschemacrawler --server=your_db_server --database=your_db --user=your_user --info-level=minimum --command lint  The docker image also includes the command which export lints in csv files, for more information see adriens/schemacrawler-additional-command-lints-as-csv\nYou can try it this way :\nschemacrawler --server=your_db_server --database=your_db --user=your_user --info-level=minimum --command csv  A default linter config file is available in the schemacrawler container home directory : schemacrawler-linter-config.xml. You can use it to include or exclude tables, change the lints severity, by adding \u0026ndash;linter-configs=schemacrawler-linter-config.xml to lint and csv commands.\nEnjoy !\n"
},
{
	"uri": "http://example.org/project_documentation/",
	"title": "Project documentation",
	"tags": [],
	"description": "",
	"content": "Project documentation Collaborators Michèle Barré https://github.com/mbarre\nProject creator, main developper\nNouméa, New Caledonia (GMT+11)\nAdrien Sales https://github.com/adriens\nDBA, Documentation contributor, Tester, PostgreSQL expert, Schemacrawler integrator, Open source evangelist\nNouméa, New Caledonia (GMT+11)\nSualeh Fatehi https://github.com/sualeh\nSchemacrawler project creator\nGMT+5\nMartin Vallet https://github.com/mvallet-calinfo\nDeveloper\nNouméa, New Caledonia (GMT+11)\nThomas Lemaire https://github.com/ThomasLemaire\nDeveloper\nNouméa, New Caledonia (GMT+11)\nbheemreddy181 https://github.com/bheemreddy181\nDeveloper, User\nGMT-6\nCode quality check https://coveralls.io/github/mbarre/schemacrawler-additional-lints\n"
},
{
	"uri": "http://example.org/",
	"title": "Schemacrawler Additionnal Lints web site",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/additional_lints/download/",
	"title": "Download",
	"tags": [],
	"description": "",
	"content": "There is two way to download Schemacrawler Additional Lints artifacts :\n directly from Github release page, or\u0026hellip; using Maven or Gradle on Jitpack repository  "
},
{
	"uri": "http://example.org/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "http://example.org/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]